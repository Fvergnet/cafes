#ifndef CAFES_FEM_MATELEM_HPP_INCLUDED
#define CAFES_FEM_MATELEM_HPP_INCLUDED

#include <petsc.h>
#include <array>

const PetscInt ind2d[4][2] = {{0, 0}, 
                              {1, 0}, 
                              {0, 1}, 
                              {1, 1}};

const PetscInt ind3d[8][3] = {{0, 0, 0},
                              {1, 0, 0},
                              {0, 1, 0},
                              {1, 1, 0},
                              {0, 0, 1},
                              {1, 0, 1},
                              {0, 1, 1},
                              {1, 1, 1}};

const PetscInt indpu2d[9][2] = {{0, 0},
                                {1, 0},
                                {2, 0},
                                {0, 1},
                                {1, 1},
                                {2, 1},
                                {0, 2},
                                {1, 2},
                                {2, 2}};

const PetscInt indpu3d[27][3]= {{0, 0, 0},
                                {1, 0, 0},
                                {2, 0, 0},
                                {0, 1, 0},
                                {1, 1, 0},
                                {2, 1, 0},
                                {0, 2, 0},
                                {1, 2, 0},
                                {2, 2, 0},
                                {0, 0, 1},
                                {1, 0, 1},
                                {2, 0, 1},
                                {0, 1, 1},
                                {1, 1, 1},
                                {2, 1, 1},
                                {0, 2, 1},
                                {1, 2, 1},
                                {2, 2, 1},
                                {0, 0, 2},
                                {1, 0, 2},
                                {2, 0, 2},
                                {0, 1, 2},
                                {1, 1, 2},
                                {2, 1, 2},
                                {0, 2, 2},
                                {1, 2, 2},
                                {2, 2, 2}};


/* Elementary matrices for the 2D problem */

/* \int dx(\phi_i) dx(\phi_j) */
const PetscReal matElem2d_dxudxu[16] = { 1./3, -1./3,  1./6, -1./6,
                                  -1./3,  1./3, -1./6,  1./6,
                                   1./6, -1./6,  1./3, -1./3, 
                                  -1./6,  1./6, -1./3,  1./3};

/* \int dy(\phi_i) dy(\phi_j) */
const PetscReal matElem2d_dyudyu[16] = { 1./3,  1./6, -1./3, -1./6,
                                   1./6,  1./3, -1./6, -1./3,
                                  -1./3, -1./6,  1./3,  1./6, 
                                  -1./6, -1./3,  1./6,  1./3};

/* \int dx(\phi_i) dy(\phi_j) */
const PetscReal matElem2d_dxudyu[16] = { 0.25, -0.25,  0.25, -0.25,
                                   0.25, -0.25,  0.25, -0.25,
                                  -0.25,  0.25, -0.25,  0.25,
                                  -0.25,  0.25, -0.25,  0.25};
/* \int phi_i \phi_j */
const PetscReal matElemMass2d[16] = { 1./9, 1./18, 1./18, 1./36,
			       1./18,  1./9, 1./36, 1./18,
			       1./18, 1./36,  1./9, 1./18,
                               1./36, 1./18, 1./18,  1./9};

const PetscReal matElem2d_pdxu[36] = {15./48, -10./48,  -5./48, 18./48, -12./48,  -6./48,  3./48,  -2./48,  -1./48,
                                 5./48,  10./48, -15./48,  6./48,  12./48, -18./48,  1./48,   2./48,  -3./48,
                                 3./48,  -2./48,  -1./48, 18./48, -12./48,  -6./48, 15./48, -10./48,  -5./48,
                                 1./48,   2./48,  -3./48,  6./48,  12./48, -18./48,  5./48,  10./48, -15./48};

const PetscReal matElem2d_pdyu[36] = {15./48, 18./48,  3./48, -10./48, -12./48,  -2./48,  -5./48,  -6./48,  -1./48,
                                 3./48, 18./48, 15./48,  -2./48, -12./48, -10./48,  -1./48,  -6./48,  -5./48,
                                 5./48,  6./48,  1./48,  10./48,  12./48,   2./48, -15./48, -18./48,  -3./48,
                                 1./48,  6./48,  5./48,   2./48,  12./48,  10./48,  -3./48, -18./48, -15./48};

// Elementary matrices for the 3D problem
const PetscReal matElem3d_dxudxu[64] = {
  1./9, -1./9, 1./18, -1./18, 1./18, -1./18, 1./36, -1./36,
  -1./9, 1./9, -1./18, 1./18, -1./18, 1./18, -1./36, 1./36,
  1./18, -1./18, 1./9, -1./9, 1./36, -1./36, 1./18, -1./18,
  -1./18, 1./18, -1./9, 1./9, -1./36, 1./36, -1./18, 1./18,
  1./18, -1./18, 1./36, -1./36, 1./9, -1./9, 1./18, -1./18,
  -1./18, 1./18, -1./36, 1./36, -1./9, 1./9, -1./18, 1./18,
  1./36, -1./36, 1./18, -1./18, 1./18, -1./18, 1./9, -1./9,
  -1./36, 1./36, -1./18, 1./18, -1./18, 1./18, -1./9, 1./9};

const PetscReal matElem3d_dyudyu[64] = {  
  1./9, 1./18, -1./9, -1./18, 1./18, 1./36, -1./18, -1./36,
  1./18, 1./9, -1./18, -1./9, 1./36, 1./18, -1./36, -1./18,
  -1./9, -1./18, 1./9, 1./18, -1./18, -1./36, 1./18, 1./36,
  -1./18, -1./9, 1./18, 1./9, -1./36, -1./18, 1./36, 1./18,
  1./18, 1./36, -1./18, -1./36, 1./9, 1./18, -1./9, -1./18,
  1./36, 1./18, -1./36, -1./18, 1./18, 1./9, -1./18, -1./9,
  -1./18, -1./36, 1./18, 1./36, -1./9, -1./18, 1./9, 1./18,
  -1./36, -1./18, 1./36, 1./18, -1./18, -1./9, 1./18, 1./9};

const PetscReal matElem3d_dzudzu[64] = {  
  1./9, 1./18, 1./18, 1./36, -1./9, -1./18, -1./18, -1./36,
  1./18, 1./9, 1./36, 1./18, -1./18, -1./9, -1./36, -1./18,
  1./18, 1./36, 1./9, 1./18, -1./18, -1./36, -1./9, -1./18,
  1./36, 1./18, 1./18, 1./9, -1./36, -1./18, -1./18, -1./9,
  -1./9, -1./18, -1./18, -1./36, 1./9, 1./18, 1./18, 1./36,
  -1./18, -1./9, -1./36, -1./18, 1./18, 1./9, 1./36, 1./18,
  -1./18, -1./36, -1./9, -1./18, 1./18, 1./36, 1./9, 1./18,
  -1./36, -1./18, -1./18, -1./9, 1./36, 1./18, 1./18, 1./9};


const PetscReal matElem3d_dxudyu[64] = {2./24, -2./24,  2./24, -2./24,  1./24, -1./24,  1./24, -1./24,
                                  2./24, -2./24,  2./24, -2./24,  1./24, -1./24,  1./24, -1./24,
			         -2./24,  2./24, -2./24,  2./24, -1./24,  1./24, -1./24,  1./24,
			         -2./24,  2./24, -2./24,  2./24, -1./24,  1./24, -1./24,  1./24,
                                  1./24, -1./24,  1./24, -1./24,  2./24, -2./24,  2./24, -2./24,
                                  1./24, -1./24,  1./24, -1./24,  2./24, -2./24,  2./24, -2./24,
                                 -1./24,  1./24, -1./24,  1./24, -2./24,  2./24, -2./24,  2./24,
                                 -1./24,  1./24, -1./24,  1./24, -2./24,  2./24, -2./24,  2./24};
  
const PetscReal matElem3d_dyudzu[64] = { 2./24,  1./24, -2./24, -1./24,  2./24,  1./24, -2./24, -1./24,
                                   1./24,  2./24, -1./24, -2./24,  1./24,  2./24, -1./24, -2./24,
                                   2./24,  1./24, -2./24, -1./24,  2./24,  1./24, -2./24, -1./24,
                                   1./24,  2./24, -1./24, -2./24,  1./24,  2./24, -1./24, -2./24,
                                  -2./24, -1./24,  2./24,  1./24, -2./24, -1./24,  2./24,  1./24,
                                  -1./24, -2./24,  1./24,  2./24, -1./24, -2./24,  1./24,  2./24,
                                  -2./24, -1./24,  2./24,  1./24, -2./24, -1./24,  2./24,  1./24,
                                  -1./24, -2./24,  1./24,  2./24, -1./24, -2./24,  1./24,  2./24};

const PetscReal matElem3d_dxudzu[64] = { 2./24, -2./24,  1./24, -1./24,  2./24, -2./24,  1./24, -1./24,
                                   2./24, -2./24,  1./24, -1./24,  2./24, -2./24,  1./24, -1./24,
                                   1./24, -1./24,  2./24, -2./24,  1./24, -1./24,  2./24, -2./24,
                                   1./24, -1./24,  2./24, -2./24,  1./24, -1./24,  2./24, -2./24,
                                  -2./24,  2./24, -1./24,  1./24, -2./24,  2./24, -1./24,  1./24,
                                  -2./24,  2./24, -1./24,  1./24, -2./24,  2./24, -1./24,  1./24,
                                  -1./24,  1./24, -2./24,  2./24, -1./24,  1./24, -2./24,  2./24,
                                  -1./24,  1./24, -2./24,  2./24, -1./24,  1./24, -2./24,  2./24};

const PetscReal matElemMass3d[64] = { 1./27,  1./54,  1./54, 1./108,  1./54, 1./108, 1./108, 1./216,
			        1./54,  1./27, 1./108,  1./54, 1./108,  1./54, 1./216, 1./108, 
			        1./54, 1./108,  1./27,  1./54, 1./108, 1./216,  1./54, 1./108,
			       1./108,  1./54,  1./54,  1./27, 1./216, 1./108, 1./108,  1./54,
			        1./54, 1./108, 1./108, 1./216,  1./27,  1./54,  1./54, 1./108,
			       1./108,  1./54, 1./216, 1./108,  1./54,  1./27, 1./108,  1./54,
			       1./108, 1./216,  1./54, 1./108,  1./54, 1./108,  1./27,  1./54,
			       1./216, 1./108, 1./108,  1./54, 1./108,  1./54,  1./54,  1./27};

const PetscReal matElem3d_pdxu[216] = {25./192, -25./288, -25./576, 5./32, -5./48, -5./96, 5./192, -5./288, -5./576, 5./32, -5./48, -5./96, 3./16, -1./8, -1./16, 1./32, -1./48, -1./96, 5./192, -5./288, -5./576, 1./32, -1./48, -1./96, 1./192, -1./288, -1./576,
				       25./576, 25./288, -25./192, 5./96, 5./48, -5./32, 5./576, 5./288, -5./192, 5./96, 5./48, -5./32, 1./16, 1./8, -3./16, 1./96, 1./48, -1./32, 5./576, 5./288, -5./192, 1./96, 1./48, -1./32, 1./576, 1./288, -1./192,
				       5./192, -5./288, -5./576, 5./32, -5./48, -5./96, 25./192, -25./288, -25./576, 1./32, -1./48, -1./96, 3./16, -1./8, -1./16, 5./32, -5./48, -5./96, 1./192, -1./288, -1./576, 1./32, -1./48, -1./96, 5./192, -5./288, -5./576,
				       5./576, 5./288, -5./192, 5./96, 5./48, -5./32, 25./576, 25./288, -25./192, 1./96, 1./48, -1./32, 1./16, 1./8, -3./16, 5./96, 5./48, -5./32, 1./576, 1./288, -1./192, 1./96, 1./48, -1./32, 5./576, 5./288, -5./192,
				       5./192, -5./288, -5./576, 1./32, -1./48, -1./96, 1./192, -1./288, -1./576, 5./32, -5./48, -5./96, 3./16, -1./8, -1./16, 1./32, -1./48, -1./96, 25./192, -25./288, -25./576, 5./32, -5./48, -5./96, 5./192, -5./288, -5./576,
				       5./576, 5./288, -5./192, 1./96, 1./48, -1./32, 1./576, 1./288, -1./192, 5./96, 5./48, -5./32, 1./16, 1./8, -3./16, 1./96, 1./48, -1./32, 25./576, 25./288, -25./192, 5./96, 5./48, -5./32, 5./576, 5./288, -5./192,
				       1./192, -1./288, -1./576, 1./32, -1./48, -1./96, 5./192, -5./288, -5./576, 1./32, -1./48, -1./96, 3./16, -1./8, -1./16, 5./32, -5./48, -5./96, 5./192, -5./288, -5./576, 5./32, -5./48, -5./96, 25./192, -25./288, -25./576,
				       1./576, 1./288, -1./192, 1./96, 1./48, -1./32, 5./576, 5./288, -5./192, 1./96, 1./48, -1./32, 1./16, 1./8, -3./16, 5./96, 5./48, -5./32, 5./576, 5./288, -5./192, 5./96, 5./48, -5./32, 25./576, 25./288, -25./192};


const PetscReal matElem3d_pdyu[216] = {25./192, 5./32, 5./192, -25./288, -5./48, -5./288, -25./576, -5./96, -5./576, 5./32, 3./16, 1./32, -5./48, -1./8, -1./48, -5./96, -1./16, -1./96, 5./192, 1./32, 1./192, -5./288, -1./48, -1./288, -5./576, -1./96, -1./576,
				       5./192, 5./32, 25./192, -5./288, -5./48, -25./288, -5./576, -5./96, -25./576, 1./32, 3./16, 5./32, -1./48, -1./8, -5./48, -1./96, -1./16, -5./96, 1./192, 1./32, 5./192, -1./288, -1./48, -5./288, -1./576, -1./96, -5./576,
				       25./576, 5./96, 5./576, 25./288, 5./48, 5./288, -25./192, -5./32, -5./192, 5./96, 1./16, 1./96, 5./48, 1./8, 1./48, -5./32, -3./16, -1./32, 5./576, 1./96, 1./576, 5./288, 1./48, 1./288, -5./192, -1./32, -1./192,
				       5./576, 5./96, 25./576, 5./288, 5./48, 25./288, -5./192, -5./32, -25./192, 1./96, 1./16, 5./96, 1./48, 1./8, 5./48, -1./32, -3./16, -5./32, 1./576, 1./96, 5./576, 1./288, 1./48, 5./288, -1./192, -1./32, -5./192,
				       5./192, 1./32, 1./192, -5./288, -1./48, -1./288, -5./576, -1./96, -1./576, 5./32, 3./16, 1./32, -5./48, -1./8, -1./48, -5./96, -1./16, -1./96, 25./192, 5./32, 5./192, -25./288, -5./48, -5./288, -25./576, -5./96, -5./576,
				       1./192, 1./32, 5./192, -1./288, -1./48, -5./288, -1./576, -1./96, -5./576, 1./32, 3./16, 5./32, -1./48, -1./8, -5./48, -1./96, -1./16, -5./96, 5./192, 5./32, 25./192, -5./288, -5./48, -25./288, -5./576, -5./96, -25./576,
				       5./576, 1./96, 1./576, 5./288, 1./48, 1./288, -5./192, -1./32, -1./192, 5./96, 1./16, 1./96, 5./48, 1./8, 1./48, -5./32, -3./16, -1./32, 25./576, 5./96, 5./576, 25./288, 5./48, 5./288, -25./192, -5./32, -5./192,
				       1./576, 1./96, 5./576, 1./288, 1./48, 5./288, -1./192, -1./32, -5./192, 1./96, 1./16, 5./96, 1./48, 1./8, 5./48, -1./32, -3./16, -5./32, 5./576, 5./96, 25./576, 5./288, 5./48, 25./288, -5./192, -5./32, -25./192};
  
const PetscReal matElem3d_pdzu[216] = {25./192, 5./32, 5./192, 5./32, 3./16, 1./32, 5./192, 1./32, 1./192, -25./288, -5./48, -5./288, -5./48, -1./8, -1./48, -5./288, -1./48, -1./288, -25./576, -5./96, -5./576, -5./96, -1./16, -1./96, -5./576, -1./96, -1./576,
				       5./192, 5./32, 25./192, 1./32, 3./16, 5./32, 1./192, 1./32, 5./192, -5./288, -5./48, -25./288, -1./48, -1./8, -5./48, -1./288, -1./48, -5./288, -5./576, -5./96, -25./576, -1./96, -1./16, -5./96, -1./576, -1./96, -5./576,
				       5./192, 1./32, 1./192, 5./32, 3./16, 1./32, 25./192, 5./32, 5./192, -5./288, -1./48, -1./288, -5./48, -1./8, -1./48, -25./288, -5./48, -5./288, -5./576, -1./96, -1./576, -5./96, -1./16, -1./96, -25./576, -5./96, -5./576,
				       1./192, 1./32, 5./192, 1./32, 3./16, 5./32, 5./192, 5./32, 25./192, -1./288, -1./48, -5./288, -1./48, -1./8, -5./48, -5./288, -5./48, -25./288, -1./576, -1./96, -5./576, -1./96, -1./16, -5./96, -5./576, -5./96, -25./576,
				       25./576, 5./96, 5./576, 5./96, 1./16, 1./96, 5./576, 1./96, 1./576, 25./288, 5./48, 5./288, 5./48, 1./8, 1./48, 5./288, 1./48, 1./288, -25./192, -5./32, -5./192, -5./32, -3./16, -1./32, -5./192, -1./32, -1./192,
				       5./576, 5./96, 25./576, 1./96, 1./16, 5./96, 1./576, 1./96, 5./576, 5./288, 5./48, 25./288, 1./48, 1./8, 5./48, 1./288, 1./48, 5./288, -5./192, -5./32, -25./192, -1./32, -3./16, -5./32, -1./192, -1./32, -5./192,
				       5./576, 1./96, 1./576, 5./96, 1./16, 1./96, 25./576, 5./96, 5./576, 5./288, 1./48, 1./288, 5./48, 1./8, 1./48, 25./288, 5./48, 5./288, -5./192, -1./32, -1./192, -5./32, -3./16, -1./32, -25./192, -5./32, -5./192,
				       1./576, 1./96, 5./576, 1./96, 1./16, 5./96, 5./576, 5./96, 25./576, 1./288, 1./48, 5./288, 1./48, 1./8, 5./48, 5./288, 5./48, 25./288, -1./192, -1./32, -5./192, -1./32, -3./16, -5./32, -5./192, -5./32, -25./192};

#undef __FUNCT__  
#define __FUNCT__ "getMatElemLaplacian2d" 
PetscErrorCode getMatElemLaplacian2d(PetscReal *MatElem, std::array<double, 2> const& h){
  PetscErrorCode ierr;
  PetscReal hxy = h[0]/h[1], hyx = h[1]/h[0];
  PetscInt i;

  PetscFunctionBeginUser;

  for(i=0;i<16;++i)
    MatElem[i] = hyx*matElem2d_dxudxu[i] + hxy*matElem2d_dyudyu[i];
  
  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemStrainTensor2d" 
PetscErrorCode getMatElemStrainTensor2d(PetscReal MatElem[][4], 
                                      std::array<double, 2> const& h){
  PetscErrorCode ierr;
  PetscReal hxy = h[0]/h[1], hyx = h[1]/h[0];
  PetscInt i, j;

  PetscFunctionBeginUser;

  for(i=0;i<16;++i){
    MatElem[i][0] = 2*hyx*matElem2d_dxudxu[i] + hxy*matElem2d_dyudyu[i];
    MatElem[i][1] = matElem2d_dxudyu[i];
    MatElem[i][3] = hyx*matElem2d_dxudxu[i] + 2*hxy*matElem2d_dyudyu[i];
  }

  for(i=0;i<4;++i)
    for(j=0;j<4;++j)
      MatElem[j*4+i][2] = MatElem[i*4+j][1];

  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemPressure2d" 
PetscErrorCode getMatElemPressure2d(PetscReal *MatElemOnu, PetscReal *MatElemOnv, std::array<double, 2> const& h){
  // return the integral of p div u
  PetscErrorCode ierr;
  PetscInt i;
  
  PetscFunctionBeginUser;

  for(i=0;i<36;++i){
    MatElemOnu[i] = -h[1]*matElem2d_pdxu[i];
    MatElemOnv[i] = -h[0]*matElem2d_pdyu[i];
  }

  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemMass2d" 
PetscErrorCode getMatElemMass2d(PetscReal *MatElem, std::array<double, 2> const& h){
  PetscErrorCode ierr;
  PetscInt i;
  
  PetscFunctionBeginUser;

  for(i=0;i<16;++i)
    MatElem[i] = h[0]*h[1]*matElemMass2d[i];

  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemLaplacian3d" 
PetscErrorCode getMatElemLaplacian3d(PetscReal *MatElem, std::array<double, 3> const& h){
  PetscErrorCode ierr;
  PetscReal hxy = h[0]*h[1], hxz = h[0]*h[2], hyz = h[1]*h[2];
  PetscInt i;

  PetscFunctionBeginUser;

  for(i=0;i<64;++i)
    MatElem[i] = hyz/h[0]*matElem3d_dxudxu[i] + hxz/h[1]*matElem3d_dyudyu[i] + hxy/h[2]*matElem3d_dzudzu[i];
  
  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemStrainTensor3d" 
PetscErrorCode getMatElemStrainTensor3d(PetscReal MatElem[][9], std::array<double, 3> const& h){
  PetscErrorCode ierr;
  PetscReal hxy = h[0]*h[1], hxz = h[0]*h[2], hyz = h[1]*h[2];
  PetscInt i, j;

  PetscFunctionBeginUser;

  for(i=0;i<64;++i){
    MatElem[i][0] = 2*hyz/h[0]*matElem3d_dxudxu[i] + hxz/h[1]*matElem3d_dyudyu[i] + hxy/h[2]*matElem3d_dzudzu[i];
    MatElem[i][4] = hyz/h[0]*matElem3d_dxudxu[i] + 2*hxz/h[1]*matElem3d_dyudyu[i] + hxy/h[2]*matElem3d_dzudzu[i];
    MatElem[i][8] = hyz/h[0]*matElem3d_dxudxu[i] + hxz/h[1]*matElem3d_dyudyu[i] + 2*hxy/h[2]*matElem3d_dzudzu[i];
    MatElem[i][1] = h[2]*matElem3d_dxudyu[i];
    MatElem[i][2] = h[1]*matElem3d_dxudzu[i];
    MatElem[i][5] = h[0]*matElem3d_dyudzu[i];
  }
  
  for(i=0;i<8;++i)
    for(j=0;j<8;++j){
      MatElem[j*8+i][3] = MatElem[i*8+j][1];
      MatElem[j*8+i][6] = MatElem[i*8+j][2];
      MatElem[j*8+i][7] = MatElem[i*8+j][5];
    }   

  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemPressure3d" 
PetscErrorCode getMatElemPressure3d(PetscReal *MatElemOnu, PetscReal *MatElemOnv, PetscReal *MatElemOnw, std::array<double, 3> const& h){
  PetscErrorCode ierr;
  PetscInt i;

  PetscFunctionBeginUser;

  for(i=0;i<216;++i){
    MatElemOnu[i] = -h[1]*h[2]*matElem3d_pdxu[i];
    MatElemOnv[i] = -h[0]*h[2]*matElem3d_pdyu[i];
    MatElemOnw[i] = -h[0]*h[1]*matElem3d_pdzu[i];
  }

  PetscFunctionReturn(0);  
}

#undef __FUNCT__  
#define __FUNCT__ "getMatElemMass3d" 
PetscErrorCode getMatElemMass3d(PetscReal *MatElem, std::array<double, 3> const& h){
  PetscErrorCode ierr;
  PetscInt i;

  PetscFunctionBeginUser;

  for(i=0;i<64;++i)
    MatElem[i] = h[0]*h[1]*h[2]*matElemMass3d[i];

  PetscFunctionReturn(0);  
}
#endif